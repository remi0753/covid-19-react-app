{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","date","Date","toDateString","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","URL","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleChangeCountry","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","i","key","App","setData","setCountry","fetchedData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d4e8d62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2tsyZ\",\"card\":\"Cards_card__17Yy0\",\"infected\":\"Cards_infected__3dM4M\",\"recovered\":\"Cards_recovered__3ZViY\",\"deaths\":\"Cards_deaths__3OuSM\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }}) => {\r\n    if(!confirmed) {\r\n        return 'Loading ...';\r\n    }\r\n\r\n    const date = new Date(lastUpdate).toDateString();\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{date}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{date}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />   \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{date}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst URL = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    const changeableURL = country ? `${URL}/countries/${country}` : URL;\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableURL);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${URL}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${URL}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { fetchDailyData } from '../../api'; \r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n            <Line \r\n                data={{\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true,\r\n                    }],\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected', 'Recoverd', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0, 0, 255, 0.5)', \r\n                            'rgba(0, 255, 0, 0.5)', \r\n                            'rgba(255, 0, 0, 0.5)',\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                    }],\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleChangeCountry }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(event) => handleChangeCountry(event.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => (<option key={i} value={country}>{country}</option>))}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState({});\r\n    const [country, setCountry] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            const fetchedData = await fetchData();\r\n\r\n            setData(fetchedData);\r\n        };\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const handleChangeCountry = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        setCountry(country);\r\n        setData(fetchedData);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div>\r\n                <h1>COVID-19</h1>\r\n            </div>\r\n            <Cards data={data}/>\r\n            <CountryPicker handleChangeCountry={handleChangeCountry}/>\r\n            <Chart data={data} country={country}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1hD4R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3kRIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1k5TW\"};"],"sourceRoot":""}